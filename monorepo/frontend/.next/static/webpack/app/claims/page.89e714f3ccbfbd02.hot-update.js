"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/claims/page",{

/***/ "(app-pages-browser)/./src/components/kanban/kanban-board.tsx":
/*!************************************************!*\
  !*** ./src/components/kanban/kanban-board.tsx ***!
  \************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   KanbanBoard: function() { return /* binding */ KanbanBoard; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.0.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/.pnpm/next@14.0.0_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @dnd-kit/core */ \"(app-pages-browser)/./node_modules/.pnpm/@dnd-kit+core@6.3.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@dnd-kit/core/dist/core.esm.js\");\n/* harmony import */ var jotai__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! jotai */ \"(app-pages-browser)/./node_modules/.pnpm/jotai@2.12.5_@types+react@18.3.23_react@18.3.1/node_modules/jotai/esm/react.mjs\");\n/* harmony import */ var _droppable_column__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./droppable-column */ \"(app-pages-browser)/./src/components/kanban/droppable-column.tsx\");\n/* harmony import */ var _draggable_task__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./draggable-task */ \"(app-pages-browser)/./src/components/kanban/draggable-task.tsx\");\n/* harmony import */ var _kanban_store__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./kanban-store */ \"(app-pages-browser)/./src/components/kanban/kanban-store.ts\");\n\nvar _s = $RefreshSig$();\n\n\n\n\n\n\nfunction KanbanBoard(param) {\n    let { claims, onClaimMove, columns = _kanban_store__WEBPACK_IMPORTED_MODULE_5__.CLAIM_COLUMNS } = param;\n    _s();\n    const [kanbanDataStore, setKanbanDataStore] = (0,jotai__WEBPACK_IMPORTED_MODULE_6__.useAtom)(_kanban_store__WEBPACK_IMPORTED_MODULE_5__.kanbanDataStoreAtom);\n    const [activeClaimId, setActiveClaimId] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [draggedClaim, setDraggedClaim] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [optimisticUpdates, setOptimisticUpdates] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    const [failedUpdates, setFailedUpdates] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(new Set());\n    // Configure DnD sensors\n    const sensors = (0,_dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__.useSensors)((0,_dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__.useSensor)(_dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__.PointerSensor, {\n        activationConstraint: {\n            distance: 5\n        }\n    }));\n    // Group claims by status when claims data changes\n    const groupedClaims = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const result = {};\n        // Initialize all columns with empty arrays\n        columns.forEach((column)=>{\n            result[column.name] = [];\n        });\n        // Group claims by their status\n        claims.forEach((claim)=>{\n            if (result[claim.claim_status]) {\n                result[claim.claim_status].push(claim);\n            }\n        });\n        return result;\n    }, [\n        claims,\n        columns\n    ]);\n    // Update local store when grouped claims change\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        setKanbanDataStore(groupedClaims);\n    }, [\n        groupedClaims,\n        setKanbanDataStore\n    ]);\n    // Handle drag start\n    const onDragStart = (event)=>{\n        const claimId = event.active.id;\n        setActiveClaimId(claimId);\n        // Find the dragged claim\n        const claim = claims.find((c)=>c.claim_id === claimId);\n        setDraggedClaim(claim || null);\n    };\n    // Handle drag end with enhanced optimistic updates\n    const onDragEnd = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (event)=>{\n        var _event_over_data_current, _event_over, _event_active_data_current;\n        const claimId = event.active.id;\n        const newStatus = (_event_over = event.over) === null || _event_over === void 0 ? void 0 : (_event_over_data_current = _event_over.data.current) === null || _event_over_data_current === void 0 ? void 0 : _event_over_data_current.column;\n        const oldStatus = (_event_active_data_current = event.active.data.current) === null || _event_active_data_current === void 0 ? void 0 : _event_active_data_current.column;\n        // Reset drag state\n        setActiveClaimId(null);\n        setDraggedClaim(null);\n        // If no valid drop target or same status, do nothing\n        if (!newStatus || !oldStatus || newStatus === oldStatus) {\n            return;\n        }\n        // Find the moved claim\n        const movedClaim = claims.find((claim)=>claim.claim_id === claimId);\n        if (!movedClaim) return;\n        // Clear any previous failed state for this claim\n        setFailedUpdates((prev)=>{\n            const newSet = new Set(prev);\n            newSet.delete(claimId);\n            return newSet;\n        });\n        // Mark as optimistically updating\n        setOptimisticUpdates((prev)=>new Set([\n                ...prev,\n                claimId\n            ]));\n        // Store the original state for potential revert\n        const originalState = {\n            ...kanbanDataStore\n        };\n        // OPTIMISTIC UPDATE: Update local state immediately\n        setKanbanDataStore((prev)=>{\n            const updatedClaim = {\n                ...movedClaim,\n                claim_status: newStatus\n            };\n            return {\n                ...prev,\n                [oldStatus]: prev[oldStatus].filter((claim)=>claim.claim_id !== claimId),\n                [newStatus]: [\n                    ...prev[newStatus],\n                    updatedClaim\n                ]\n            };\n        });\n        // Call the API to persist the change\n        try {\n            await (onClaimMove === null || onClaimMove === void 0 ? void 0 : onClaimMove(claimId, oldStatus, newStatus));\n            // Success: Remove from optimistic updates\n            setOptimisticUpdates((prev)=>{\n                const newSet = new Set(prev);\n                newSet.delete(claimId);\n                return newSet;\n            });\n        } catch (error) {\n            // Error: Revert the optimistic update and mark as failed\n            setKanbanDataStore(originalState);\n            setOptimisticUpdates((prev)=>{\n                const newSet = new Set(prev);\n                newSet.delete(claimId);\n                return newSet;\n            });\n            setFailedUpdates((prev)=>new Set([\n                    ...prev,\n                    claimId\n                ]));\n            console.error(\"Failed to update claim status, reverted:\", error);\n            // Auto-clear failed state after 3 seconds\n            setTimeout(()=>{\n                setFailedUpdates((prev)=>{\n                    const newSet = new Set(prev);\n                    newSet.delete(claimId);\n                    return newSet;\n                });\n            }, 3000);\n        }\n    }, [\n        claims,\n        kanbanDataStore,\n        onClaimMove\n    ]);\n    // Get active column for drag overlay\n    const activeColumn = draggedClaim ? (0,_kanban_store__WEBPACK_IMPORTED_MODULE_5__.getColumnByName)(draggedClaim.claim_status) : null;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__.DndContext, {\n        sensors: sensors,\n        collisionDetection: _dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__.closestCorners,\n        onDragStart: onDragStart,\n        onDragEnd: onDragEnd,\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex gap-6 overflow-x-auto p-6 h-full bg-white border rounded-md min-h-[600px]\",\n                children: columns.map((column)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_droppable_column__WEBPACK_IMPORTED_MODULE_3__.DroppableColumn, {\n                        columnSettings: column,\n                        claims: kanbanDataStore[column.name] || []\n                    }, column.id, false, {\n                        fileName: \"/Users/vikramkhandelwal/corgi-hack/monorepo/frontend/src/components/kanban/kanban-board.tsx\",\n                        lineNumber: 172,\n                        columnNumber: 11\n                    }, this))\n            }, void 0, false, {\n                fileName: \"/Users/vikramkhandelwal/corgi-hack/monorepo/frontend/src/components/kanban/kanban-board.tsx\",\n                lineNumber: 170,\n                columnNumber: 7\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__.DragOverlay, {\n                children: activeClaimId && draggedClaim && activeColumn ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: \"rotate-6 scale-105\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_draggable_task__WEBPACK_IMPORTED_MODULE_4__.DraggableTask, {\n                        id: activeClaimId,\n                        claim: draggedClaim,\n                        columnSettings: activeColumn,\n                        index: 0,\n                        isDraggingDisabled: true\n                    }, void 0, false, {\n                        fileName: \"/Users/vikramkhandelwal/corgi-hack/monorepo/frontend/src/components/kanban/kanban-board.tsx\",\n                        lineNumber: 184,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/vikramkhandelwal/corgi-hack/monorepo/frontend/src/components/kanban/kanban-board.tsx\",\n                    lineNumber: 183,\n                    columnNumber: 11\n                }, this) : null\n            }, void 0, false, {\n                fileName: \"/Users/vikramkhandelwal/corgi-hack/monorepo/frontend/src/components/kanban/kanban-board.tsx\",\n                lineNumber: 181,\n                columnNumber: 7\n            }, this)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/vikramkhandelwal/corgi-hack/monorepo/frontend/src/components/kanban/kanban-board.tsx\",\n        lineNumber: 164,\n        columnNumber: 5\n    }, this);\n}\n_s(KanbanBoard, \"QynzmUJCqtf8/2EDZDZCuekTx9A=\", false, function() {\n    return [\n        jotai__WEBPACK_IMPORTED_MODULE_6__.useAtom,\n        _dnd_kit_core__WEBPACK_IMPORTED_MODULE_2__.useSensors\n    ];\n});\n_c = KanbanBoard;\nvar _c;\n$RefreshReg$(_c, \"KanbanBoard\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/kanban/kanban-board.tsx\n"));

/***/ })

});